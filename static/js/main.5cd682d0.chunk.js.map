{"version":3,"sources":["Services/firebase.js","Views/LandingPage.js","Views/LocationQuestion.js","Views/QuestionTemplate.js","Views/Loading.js","Views/ResultsPage.js","Views/ErrorResults.js","SurveyController.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","LandingPage","props","className","onClick","this","goNext","type","href","title","Component","LocationQuestion","handleChange","event","setState","target","name","value","state","address","city","stateName","zip","canGoNext","bind","checkValidLocation","currentResponse","getCurrentResponse","length","concat","location","checkFields","saveResponse","alert","undefined","toLowerCase","origin","push","distanceService","window","google","maps","DistanceMatrixService","Promise","resolve","reject","getDistanceMatrix","origins","destinations","travelMode","TravelMode","DRIVING","unitSystem","UnitSystem","IMPERIAL","response","status","containsCorrectResponse","originAddresses","includes","DistanceMatrixStatus","OK","for","onChange","id","disabled","nextDisabled","QuestionTemplate","handleCheck","checked","questionText","goBack","lastQuestion","Loading","class","ResultsPage","computeResults","results","resultsDisplay","lastUpdated","i","criteriaDisplay","c","criteriaAvailable","criteriaNotAvailable","websiteUrl","hoursOfOperation","phone","distanceAway","originAddress","ErrorResults","App","updateResponses","responses","pageIndex","questions","testingCenters","resultsError","getSurveyQuestions","getTestingCenters","getLastUpdated","dateUpdated","ref","on","snapshot","val","forEach","date","surveyQuestionRef","questionsList","responsesList","surveyQuestion","testingCentersList","testingCenter","setTimeout","free","driveThrough","translator","console","log","tc","criteriaMetCount","criteriaAvailableList","criteriaNotAvailableList","criteriaMet","addresses","rows","elements","element","distance","distanceArr","text","split","mileage","parseFloat","sort","a","b","questionTemplates","question","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","SurveyController","document","getElementById"],"mappings":"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","file":"static/js/main.5cd682d0.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAzlS4G0_AilAhMaLg1-Kqq5p6dEqI_2MU\",\n    authDomain: \"info-442-1602963873043.firebaseapp.com\",\n    databaseURL: \"https://info-442-1602963873043.firebaseio.com\",\n    projectId: \"info-442-1602963873043\",\n    storageBucket: \"info-442-1602963873043.appspot.com\",\n    messagingSenderId: \"1017087285302\",\n    appId: \"1:1017087285302:web:0a2d9a875812a2ecffe097\",\n    measurementId: \"G-CDH98XSBFG\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const db = firebase.database();","import React, {Component} from 'react';\n\nclass LandingPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n      return (\n        <div>\n            <h1>Where2Test</h1>\n            <p className=\"Descr\">We have created this web app to make finding a COVID-19 testing center easier and more accessible for local Seattle people. Please fill out a few questions to find out where the closest COVID-19 testing center is that best fits your needs.</p>\n            <p className=\"Descr disclaimer\">At this moment, this app can only locate testing centers in the Seattle area, and we only support valid Washington addresses.</p>\n            <button onClick={this.props.goNext} type=\"button\" className=\"Start-btn\">START</button>\n            <footer>\n            <div>Icons made by <a href=\"https://smashicons.com/\" title=\"Smashicons\">Smashicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n            </footer>\n        </div>\n      );\n  }\n}\n\nexport default LandingPage;","import React, {Component} from 'react';\nimport google from 'react';\n\nclass LocationQuestion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: \"\",\n      city: \"\",\n      stateName: \"\",\n      zip: \"\"\n    };\n    this.canGoNext = this.canGoNext.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.checkValidLocation = this.checkValidLocation.bind(this);\n  }\n\n  componentWillMount() {\n    var currentResponse = this.props.getCurrentResponse();\n    if (currentResponse !== null || currentResponse.length !== 0) {\n      this.setState({address: currentResponse.address, city: currentResponse.city, stateName: currentResponse.stateName, zip: currentResponse.zip});\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async canGoNext() {\n    var address = ''.concat(this.state.address, \", \", this.state.city, \" \", this.state.stateName, \" \", this.state.zip);\n    \n    var location =  {\n      address: this.state.address,\n      city: this.state.city,\n      stateName: this.state.stateName,\n      zip: this.state.zip\n    }\n\n    var fieldsFilledOut = this.checkFields();\n    \n    if (fieldsFilledOut) {\n      var validLocation = await this.checkValidLocation(address);\n      if (validLocation) {\n        this.props.saveResponse(location);\n        this.props.goNext();\n      }\n    } else {\n        alert(\"Please enter a valid address. Note: We currently only support Washington addresses.\");\n    }\n  }\n\n  checkFields() {\n    const {address, city, stateName, zip } = this.state;\n    var filledOut = ((address !== undefined && address.length > 0) && (city !== undefined && city.length > 0) && (stateName !== undefined && (stateName.toLowerCase() === \"wa\" || stateName.toLowerCase() === \"washington\")) && (zip !== undefined && zip.length > 4));\n    return filledOut;\n  }\n\n  checkValidLocation(address) {\n    var origin = [];\n    origin.push(address);\n    var distanceService = new window.google.maps.DistanceMatrixService();\n    return new Promise(function(resolve, reject) {\n        distanceService.getDistanceMatrix(\n        {\n          origins: origin,\n          destinations: [\"Seattle, WA, USA\"],\n          travelMode: window.google.maps.TravelMode.DRIVING,\n          unitSystem: window.google.maps.UnitSystem.IMPERIAL \n        },\n        function (response, status) {\n          var checkOrigin = response.originAddresses[0];\n          var containsCorrectResponse = checkOrigin.includes(\"WA\");\n          if (status === window.google.maps.DistanceMatrixStatus.OK && containsCorrectResponse) {\n            resolve(true);\n          } else {\n            alert(\"Invalid Address\");\n            reject(false);\n          }\n        }\n      );\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"Question-page\">\n        <div className=\"Question\">\n          <p className=\"Q L\">\n            Please enter a location.<span className=\"required\">*</span>\n          </p>\n          <div className=\"Location-form\">\n              <form className=\"Full-address\">\n                  <div className=\"Address-field\">\n                      <label for=\"Address\">ADDRESS</label>\n                      <input onChange={this.handleChange} type=\"text\" id=\"Address\" name=\"address\" value={ this.state.address }></input>\n                  </div>\n                  <div className=\"City-field\">\n                      <label for=\"City\">CITY</label>\n                      <input onChange={this.handleChange} type=\"text\" id=\"City\" name=\"city\" value={ this.state.city }></input>\n                  </div>\n                  <div className=\"State-field\">\n                      <label for=\"State\">STATE</label>\n                      <input onChange={this.handleChange} type=\"text\" id=\"State\" name=\"stateName\" value={ this.state.stateName }></input>\n                  </div>\n                  <div className=\"Zip-field\">\n                      <label for=\"Zip\">ZIP</label>\n                      <input onChange={this.handleChange} type=\"text\" id=\"Zip\" name=\"zip\" value={ this.state.zip }></input>\n                  </div>\n              </form>\n          </div>\n        </div>\n        <div className=\"Nav-Buttons-One\">\n          <button onClick={this.canGoNext} type=\"button\" className=\"Nav-btn\" disabled={this.props.nextDisabled}>\n            NEXT\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LocationQuestion;\n","import React, {Component} from 'react';\n\nclass QuestionTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: \"\"\n    };\n    this.handleCheck = this.handleCheck.bind(this);\n    this.canGoNext = this.canGoNext.bind(this);\n  }\n\n  componentWillMount() {\n    var currentResponse = this.props.getCurrentResponse();\n    this.setState({checked: currentResponse});\n  }\n\n  handleCheck = (event) => {\n    this.setState({\n      checked: event.target.value\n    });\n    this.props.saveResponse(event.target.value);\n  }\n\n  canGoNext() {\n    if (this.state.checked !== \"Yes\" && this.state.checked !== \"No\") {\n      alert(\"Please make a selection\");\n    } else {\n      this.props.saveResponse(this.state.checked);\n      this.props.goNext();\n    } \n  }\n\n  render() {\n    return (\n        <div className=\"Question-page\">\n          <div className=\"Question\">\n            <p className=\"Q\">{this.props.questionText}<span className=\"required\">*</span></p>\n            <div className=\"Checkboxes\">\n              <div className=\"CB\">\n                <input\n                  type=\"radio\"\n                  id=\"Yes\"\n                  name=\"Yes\"\n                  value=\"Yes\"\n                  className=\"Box\"\n                  checked={this.state.checked === \"Yes\"}\n                  onChange={this.handleCheck}\n                />\n                <label for=\"Yes\">Yes</label>\n              </div>\n              <div className=\"CB\">\n                <input\n                  type=\"radio\"\n                  id=\"No\"\n                  name=\"No\"\n                  value=\"No\"\n                  className=\"Box\"\n                  checked={this.state.checked === \"No\"}\n                  onChange={this.handleCheck}\n                />\n                <label for=\"No\">No</label>\n              </div>\n            </div>\n          </div>\n          <div className=\"Nav-Buttons\">\n            <button onClick={this.props.goBack} type=\"button\" className=\"Nav-btn\">\n              BACK\n            </button>\n            <button onClick={this.canGoNext} type=\"button\" className=\"Nav-btn\" disabled={this.props.nextDisabled}>\n              {this.props.lastQuestion ? \"SUBMIT\" : \"NEXT\"}\n            </button>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default QuestionTemplate;","import React, {Component} from 'react';\n\nclass Loading extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"Loading-page\">\n        <p className=\"Error-message\">Please wait a moment while we retrieve your results.</p>\n        <div class=\"loader\"></div>\n      </div>\n    );\n    }\n}\n\n\nexport default Loading;","import { render } from '@testing-library/react';\nimport React, {Component} from 'react';\nimport Loading from './Loading';\n\nclass ResultsPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    this.props.computeResults();\n  }\n\n  render() {\n      const results = this.props.results;\n      const lastUpdated = this.props.lastUpdated;\n\n      // get results to display\n      var resultsDisplay = [];\n      for (var i = 0; i < results.length; i++) {\n        var criteriaDisplay = [];\n        for (var c in results[i].criteriaAvailable) {\n          criteriaDisplay.push(\n          <p className=\"Criteria\"><span className=\"Checkmark\">&#10003; </span>{results[i].criteriaAvailable[c]}</p>\n          );\n        }\n        for (var c in results[i].criteriaNotAvailable) {\n          criteriaDisplay.push(\n            <p className=\"Criteria\"><span className=\"x-mark\">&#10007; </span>{results[i].criteriaNotAvailable[c]}</p>\n          );\n        }\n\n        resultsDisplay.push(\n          <div key={i} className=\"Result-section-flexbox\">\n            <div className=\"Single-result-flexbox\">\n                <div className=\"Result-card\">\n                    <p className=\"Testing-center\"><a className=\"black-link\" href={results[i].websiteUrl} target=\"_blank\">{results[i].name}</a></p>\n                    <p className=\"Testing-center-address\"><a href={\"http://maps.google.com/?q=\" + results[i].address} target=\"_blank\">{results[i].address}</a></p>\n                    <p className=\"Testing-center-hours\">{results[i].hoursOfOperation}</p>\n                    <div className=\"Card-bottom\">\n                        <div>\n                            <p className=\"Testing-phone\"><a href={\"tel:\" + results[i].phone} target=\"_blank\">{results[i].phone}</a></p>\n                        </div>\n                        <div>\n                            <p className=\"Testing-distance\">{results[i].distanceAway + \" mi\"}</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"Criteria-checklist\">\n                    {criteriaDisplay}\n                </div>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        this.props.results.length > 0 && this.props.lastUpdated.length > 0 ? <div>\n            <div>\n                <p className=\"Result-intro\">Here are the testing centers you should go to based on your selections:</p>\n                <p className=\"Result-explanation\">They are filtered based on your preferences and ordered based on closest distance to: <span className=\"Result-address\">{this.props.originAddress}</span>. Please make sure this is the address you intended.</p>\n                <p className=\"Result-explanation last-updated\">Testing center information last updated on: <span className=\"updated-date\">{this.props.lastUpdated[0]}</span></p>\n            </div>\n            <div>\n              {resultsDisplay}\n            </div>\n            <div>\n              <p className=\"end-note\">Refresh the page to take the survey again.</p>\n            </div>\n        </div> : <Loading></Loading>\n      );\n  }\n}\n\nexport default ResultsPage;","import React, {Component} from 'react';\n\nclass ErrorResults extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <p className=\"Error-message\">We are unable to retrieve your results right now. Please refresh the page and try again.</p>\n      </div>\n    );\n    }\n}\n\n\nexport default ErrorResults;","import './App.css';\nimport { db } from './Services/firebase';\nimport google from 'react';\nimport React, {Component} from 'react';\nimport LandingPage from './Views/LandingPage';\nimport LocationQuestion from './Views/LocationQuestion';\nimport QuestionTemplate from './Views/QuestionTemplate';\nimport ResultsPage from './Views/ResultsPage';\nimport Loading from './Views/Loading';\nimport ErrorResults from './Views/ErrorResults';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        questions: [],\n        responses: [],\n        pageIndex: 0,\n        originAddress: \"\",\n        testingCenters: [],\n        results: [],\n        lastUpdated: [],\n        resultsError: false,\n        nextDisabled: false\n    }\n\n    this.getSurveyQuestions = this.getSurveyQuestions.bind(this);\n    this.getTestingCenters = this.getTestingCenters.bind(this);\n    this.getCurrentResponse = this.getCurrentResponse.bind(this);\n    this.goNext = this.goNext.bind(this);\n    this.saveResponse = this.saveResponse.bind(this);\n    this.goBack = this.goBack.bind(this);\n    this.computeResults = this.computeResults.bind(this);\n    this.getLastUpdated = this.getLastUpdated.bind(this);\n  }\n  \n  async componentWillMount() {\n      await this.getSurveyQuestions();\n      await this.getTestingCenters();\n      await this.getLastUpdated();\n  }\n\n  async getLastUpdated() {\n    var dateUpdated = [];\n    var lastUpdatedRef = db.ref(\"lastUpdated\");\n    lastUpdatedRef.on('value', function(snapshot) {\n      var data = snapshot.val();\n      data.forEach(date => {\n        dateUpdated.push(date.lastUpdated);\n      });\n    });\n    this.setState({lastUpdated: dateUpdated});\n  }\n\n async getSurveyQuestions() {\n    var surveyQuestionRef = db.ref(\"surveyQuestions\");\n    var questionsList = [];\n    var responsesList = [];\n    surveyQuestionRef.on('value', function(snapshot) {\n        var data = snapshot.val();\n        data.forEach(surveyQuestion => {\n            questionsList.push(surveyQuestion);\n            responsesList.push(\"No response\");\n        })\n    });   \n    this.setState({questions: questionsList, responses: responsesList});\n  }\n\n  async getTestingCenters() {\n    var testingCentersList = [];\n    var testingSitesRef = db.ref(\"testingSites\");\n    testingSitesRef.on('value', function(snapshot) {\n        var data = snapshot.val();\n        data.forEach(testingCenter => {\n            testingCentersList.push(testingCenter);\n        })\n    });\n    this.setState({testingCenters: testingCentersList});\n  }\n\n  getCurrentResponse() {\n    return this.state.responses[this.state.pageIndex - 1];\n  }\n\n  goNext() {\n    if (this.state.nextDisabled === false) {\n      this.setState({\n        pageIndex: this.state.pageIndex + 1,\n        nextDisabled: true\n      });\n      setTimeout(()=>{\n        this.setState({\n        nextDisabled: false,\n      });\n    }, 1000)\n    }\n  }\n\n  saveResponse = (response) => {\n      var updateResponses = this.state.responses;\n      updateResponses[this.state.pageIndex - 1] = response;\n      this.setState({\n          responses: updateResponses,\n      });\n  }\n\n  goBack() {\n      this.setState({pageIndex: this.state.pageIndex - 1});\n  }\n\n  async computeResults() {\n      var testingCenters = this.state.testingCenters;\n      var free = this.state.responses[1] === \"Yes\";\n      var driveThrough = this.state.responses[2] === \"Yes\";\n      var translator = this.state.responses[3] === \"Yes\";\n\n      if (testingCenters.length < 1) {\n          console.log(\"Error retrieving testing centers\");\n      }\n\n      testingCenters.forEach(tc =>{\n        var criteriaMetCount = 0;\n        var criteriaAvailableList = [];\n        var criteriaNotAvailableList = [];\n        if ((tc.free=== true)) {\n          criteriaAvailableList.push(\"Free testing available\");\n          if (free === true) {\n            criteriaMetCount++;\n          }\n        } else {\n          criteriaNotAvailableList.push(\"No free testing\");\n        }\n        if (tc.driveThrough === true) {\n          criteriaAvailableList.push(\"Drive through option\");\n          if (driveThrough === true) {\n            criteriaMetCount++;\n          }\n        } else {\n          criteriaNotAvailableList.push(\"No drive through option\");\n        }\n        if (tc.translator === true) {\n          criteriaAvailableList.push(\"Translator available\");\n          if (translator === true) {\n            criteriaMetCount++;\n          }\n        } else {\n          criteriaNotAvailableList.push(\"No translator option\");\n        }\n\n        tc.criteriaMet = criteriaMetCount;\n        tc.criteriaAvailable = criteriaAvailableList;\n        tc.criteriaNotAvailable = criteriaNotAvailableList;\n      });\n\n\n      // get survey address\n      var origin = [];\n      origin.push(''.concat(this.state.responses[0].address, \", \", this.state.responses[0].city, \", \", this.state.responses[0].stateName, \" \", this.state.responses[0].zip));\n\n      // get distance away from specificed location \n      var addresses = [];\n      testingCenters.forEach(tc => {\n          addresses.push(tc.address);\n      });\n\n      var distanceService = new window.google.maps.DistanceMatrixService();\n      distanceService.getDistanceMatrix(\n        {\n          origins: origin,\n          destinations: addresses,\n          travelMode: window.google.maps.TravelMode.DRIVING,\n          unitSystem: window.google.maps.UnitSystem.IMPERIAL \n        },\n        function (response, status) {\n          if (status !== window.google.maps.DistanceMatrixStatus.OK) {\n              console.log(\"Error: \", status);\n              this.setState({resultsError: true});   \n          } else {\n            var results = response.rows[0].elements;\n            var originAddress = response.originAddresses[0];\n            console.log(originAddress);\n            for (var i = 0; i < results.length; i++) {\n                var element = results[i];\n                if (element.distance == undefined) {\n                  this.setState({resultsError: true});\n                } else {\n                  var distance = element.distance.text;\n                  var distanceArr = distance.split(\" \");\n                  var mileage = parseFloat(distanceArr[0]);\n                  testingCenters[i].distanceAway = mileage;\n                }\n            }\n            // sort by criteria met and then distance\n            testingCenters.sort(function(a, b) {\n              return b.criteriaMet - a.criteriaMet || a.distanceAway - b.distanceAway;\n            });\n            console.log(testingCenters);\n            this.setState({originAddress: originAddress, results: testingCenters});\n          }\n        }.bind(this)\n    );\n  }\n\n  render() {\n    const { pageIndex, questions, resultsError } = this.state;\n    var questionTemplates = [];\n\n    for (var i = 1; i < questions.length; i++) {\n      questionTemplates.push(\n        <QuestionTemplate \n          key={i} \n          lastQuestion={i === questions.length - 1} \n          goNext={this.goNext} saveResponse={this.saveResponse} \n          goBack={this.goBack} questionText={questions[i].question} \n          getCurrentResponse={this.getCurrentResponse}\n          nextDisabled={this.state.nextDisabled}>\n        </QuestionTemplate>\n      );\n    }\n\n    return (\n      resultsError ? <ErrorResults></ErrorResults> : <div className=\"App\">\n          {pageIndex === 0 ? <LandingPage goNext={this.goNext}></LandingPage> : null}\n          {pageIndex === 1 ? <LocationQuestion goNext={this.goNext} saveResponse={this.saveResponse} getCurrentResponse={this.getCurrentResponse} nextDisabled={this.state.disabled}></LocationQuestion> : null}\n          {pageIndex === 2 ? questionTemplates[0] : null}\n          {pageIndex === 3 ? questionTemplates[1] : null}\n          {pageIndex === 4 ? questionTemplates[2] : null}\n          {pageIndex === 5 ? <ResultsPage computeResults={this.computeResults} originAddress = {this.state.originAddress} results={this.state.results} lastUpdated={this.state.lastUpdated}></ResultsPage> : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SurveyController from './SurveyController';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SurveyController></SurveyController>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}